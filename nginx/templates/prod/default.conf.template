upstream backend {
    server  backend:5000;
}

upstream frontend {
    server  frontend:8080;
}

upstream tusd {
    server tusd:8080;
}

upstream varnish {
    server varnish:80;
}

server {
    listen 80;
    server_name localhost;

    location / {
        proxy_set_header Host $host;

        proxy_pass http://frontend;
    }

    location ~ "^/api/v1/projects/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/flights/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/raw_data/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/download$" {
        # Increase buffer and timeout settings for large downloads
        client_body_buffer_size     128k;
        client_max_body_size        0;
        client_body_timeout         8h;

        keepalive_timeout           8h;
        send_timeout                8h;
        proxy_connect_timeout       8h;
        proxy_send_timeout          8h;
        proxy_read_timeout          8h;
        proxy_buffer_size           128k;
        proxy_buffers               4 256k;
        proxy_busy_buffers_size     256k;
        proxy_temp_file_write_size  256k;
        aio                         on;
        tcp_nopush                  on;
        tcp_nodelay                 on;

        # forward incoming requests to FastAPI backend container
        proxy_pass  http://backend;

        # disable request and response buffering
        proxy_request_buffering off;
        proxy_buffering         off;
        proxy_http_version      1.1;

        # add X-Forwarded-* headers
        proxy_set_header Connection "";
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        # forward incoming requests to FastAPI backend container
        proxy_pass  http://backend;

        # disable request and response buffering
        proxy_request_buffering off;
        proxy_buffering         off;
        proxy_http_version      1.1;

        # add X-Forwarded-* headers
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        # disable checking request body size and increase timeouts
        client_max_body_size 0;
        client_body_timeout 600s;
        keepalive_timeout 600s;
    }

    location /sl {
        proxy_set_header Host $host;

        # forward incoming requests to FastAPI backend container
        proxy_pass http://backend;
    }

    location /developer {
        proxy_set_header Host $host;

        proxy_pass http://backend;
    }

    location /files {
        # forward incoming requests to tusd container
        proxy_pass http://tusd;

        # disable request and response buffering
        proxy_request_buffering off;
        proxy_buffering         off;
        proxy_http_version      1.1;
        
        # add X-Forwarded-* headers
        proxy_set_header X-Forwarded-Host  $http_host;
        proxy_set_header X-Forwarded-Proto https;
        
        # disable checking request body size and increase timeouts
        client_max_body_size 0;
        client_body_timeout 600s;
        keepalive_timeout 600s;

        # websocket proxying
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location /cog {
        # Proxy valid requests to the backend
        proxy_set_header Host $host;

        proxy_pass http://varnish;
    }

    location /mvt/ {
        # Remove the /mvt prefix
        rewrite ^/mvt/(.*)$ /$1 break;

        # Proxy valid requests to the backend
        proxy_set_header Host $host;
        proxy_pass http://varnish/;
    }

    location /static {
        proxy_set_header Host $host;

        proxy_pass http://backend;
    }

    location ~ ^/(potree|share-potree) {
        proxy_set_header Host $host;

        proxy_pass http://backend;
    }

    location = /pc-gltf-viewer {
        return 301 /pc-gltf-viewer/;
    }


    location = /pc-gltf-viewer/index.html {
        return 301 /pc-gltf-viewer/;
    }

    location /pc-gltf-viewer {
        proxy_set_header Host $host;

        proxy_pass http://backend;
    }
}