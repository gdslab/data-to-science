"""modify sensor options for flights

Revision ID: 36e70891a65f
Revises: ef181a252d8e
Create Date: 2025-04-11 13:05:06.183130

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "36e70891a65f"
down_revision: str | None = "ef181a252d8e"
branch_labels: str | None = None
depends_on: str | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("ALTER TYPE sensor_type ADD VALUE IF NOT EXISTS 'Thermal';")
    op.execute("ALTER TYPE sensor_type ADD VALUE IF NOT EXISTS 'Hyperspectral';")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Step 0: Replace 'Thermal' and 'Hyperspectral' with 'Other'
    op.execute(
        """
        UPDATE flights
        SET sensor = 'Other'
        WHERE sensor IN ('Thermal', 'Hyperspectral');
    """
    )

    # Step 1: Create a new type with only the original values
    op.execute(
        "CREATE TYPE sensor_type_old AS ENUM ('RGB', 'Multispectral', 'LiDAR', 'Other');"
    )

    # Step 2: Alter the column to use the new enum type
    op.execute(
        """
        ALTER TABLE flights
        ALTER COLUMN sensor
        TYPE sensor_type_old
        USING sensor::text::sensor_type_old;
    """
    )

    # Step 3: Drop the modified enum type
    op.execute("DROP TYPE sensor_type;")

    # Step 4: Rename the old enum type back to the original name
    op.execute("ALTER TYPE sensor_type_old RENAME TO sensor_type;")
    # ### end Alembic commands ###
