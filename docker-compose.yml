services:
  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
    image: d2s-app:dev
    platform: linux/x86_64
    command: yarn run dev --host 0.0.0.0 --port 8080 --force
    volumes:
      - ./frontend/:/app
      - /app/node_modules
    restart: always
    depends_on:
      - backend
    env_file:
      - frontend.env

  backend:
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: true
    image: d2s-api:dev
    platform: linux/x86_64
    volumes:
      - ./backend:/app
      - external-data:/srv/external-data
      - log-data:/app/logs
      - tusd-data:/srv/tusd-data/data
      - user-data:/static
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - TILE_SIGNING_SECRET_KEY=${TILE_SIGNING_SECRET_KEY}
    env_file:
      - backend.env
      - db.env

  db:
    image: postgis/postgis:15-3.3
    platform: linux/x86_64
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready --username=$$POSTGRES_USER --dbname=$$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=d2s
      - POSTGRES_DB=d2s
      - PGTZ=Etc/UTC
    env_file:
      - db.env

  pgadmin:
    image: dpage/pgadmin4
    platform: linux/x86_64
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PGADMIN_DEFAULT_EMAIL=youremail@example.com
      - PGADMIN_DEFAULT_PASSWORD=password

  redis:
    image: redis:alpine
    platform: linux/x86_64
    restart: always

  celery_worker:
    image: d2s-api:dev
    platform: linux/x86_64
    command: /app/celery/worker-start.sh
    volumes:
      - external-data:/srv/external-data
      - tusd-data:/srv/tusd-data/data
      - user-data:/static
    restart: always
    depends_on:
      - redis
      - db
    env_file:
      - backend.env
      - db.env
    environment:
      - CELERY_WORKERS=4

  celery_beat:
    image: d2s-api:dev
    platform: linux/x86_64
    command: /app/celery/beat-start.sh
    volumes:
      - celery-data:/var/run/celery
      - tusd-data:/srv/tusd-data/data
      - user-data:/static
    restart: always
    depends_on:
      - redis
      - db
    env_file:
      - backend.env
      - db.env

  flower:
    image: d2s-api:dev
    platform: linux/x86_64
    command: /app/celery/flower-start.sh
    volumes:
      - user-data:/user-data
    ports:
      - 5555:5555
    restart: always
    depends_on:
      - redis
      - db
    env_file:
      - backend.env
      - db.env

  proxy:
    build: 
      context: ./nginx
      dockerfile: nginx.dockerfile
      args:
        - DEFAULT_CONF=dev
    image: d2s-proxy:dev
    platform: linux/x86_64
    tmpfs:
      - /tmp
    ports:
      - "0.0.0.0:8000:80"
    restart: always
    depends_on:
      - frontend

  varnish:
    build:
      context: ./varnish
      dockerfile: varnish.dockerfile
    image: d2s-varnish:dev
    tmpfs:
      - /var/lib/varnish/varnishd:exec
    command: "-p default_keep=300"
    depends_on:
      - pg_tileserv
      - proxy
      - titiler
    environment:
      - TILE_SIGNING_SECRET_KEY=${TILE_SIGNING_SECRET_KEY}
      - VARNISH_SIZE=2G

  pg_tileserv:
    image: pramsey/pg_tileserv:latest
    platform: linux/x86_64
    volumes:
      - ./pg_tileserv.toml:/config/pg_tileserv.toml:ro
    ports:
      - 7800:7800
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - db.env

  titiler:
    image: ghcr.io/developmentseed/titiler:0.19.0
    volumes:
      - user-data:/static
    environment:
      # Application
      - HOST=0.0.0.0
      - PORT=8888
      # Gunicorn / Uvicorn
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#web_concurrency
      # - WEB_CONCURRENCY=1
      - ACCESS_LOG=/var/log/titiler-access.log
      - ERROR_LOG=/var/log/titiler-error.log
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#workers_per_core
      - WORKERS_PER_CORE=1
      # GDAL config
      - CPL_TMPDIR=/tmp
      - GDAL_CACHEMAX=75%
      - GDAL_INGESTED_BYTES_AT_OPEN=32768
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_HTTP_MULTIPLEX=YES
      - GDAL_HTTP_VERSION=2
      - PYTHONWARNINGS=ignore
      - VSI_CACHE=TRUE
      - VSI_CACHE_SIZE=536870912
      - CPL_VSIL_CURL_ALLOWED_EXTENSIONS=.tif,.TIF,.tiff
      - CPL_VSIL_CURL_CACHE_SIZE=200000000

  tusd:
    image: tusproject/tusd:latest
    command: -verbose -behind-proxy -hooks-http http://proxy/api/v1/tusd -hooks-http-forward-headers Cookie X-Project-ID X-Flight-ID X-Data-Type
    volumes:
      - ./tusd/hooks:/srv/tusd-hooks
      - tusd-data:/srv/tusd-data/data
      - user-data:/static
    restart: always
    depends_on:
      - frontend
      - backend
      - proxy

volumes:
  celery-data:
  db-data:
  log-data:
  user-data:
  tusd-data:
    driver: local
    driver_opts:
      type: none
      device: ${TUSD_STORAGE}
      o: bind
  external-data:
    driver: local
    driver_opts:
      type: none
      device: ${EXTERNAL_STORAGE}
      o: bind
